name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string
        default: '0.0.0'

      dryrun:
        description: 'Skip publish (--dry-run)'
        required: false
        type: boolean
        default: false

  pull_request:
    paths:
      - '.github/workflows/release.yml'

jobs:
  publish:
    name: 'Publish on crates.io'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      contents: write
      id-token: write

    env:
      TAG: "v${{ inputs.version }}"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - run: cargo install cargo-edit
      - run: cargo set-version ${{ inputs.version }}

      - name: Generate Changelog
        run: |
          echo "## Changes" > CHANGELOG.md
          if git describe --tags --abbrev=0 2>/dev/null; then
            PREV_TAG=$(git describe --tags --abbrev=0)
            git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
          else
            git log --pretty=format:"- %s (%h)" >> CHANGELOG.md
          fi

      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Git commit & tag
        if: ${{ !inputs.dryrun }}
        run: |
          git add Cargo.toml
          git commit -m "Bump crate version to ${{ inputs.version }}"
          git tag $TAG

      - uses: rust-lang/crates-io-auth-action@v1
        id: auth

      - run: cargo publish $SKIP --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
          SKIP: ${{ inputs.dryrun && '--dry-run' || '' }}

      - name: Push to repository
        if: ${{ !inputs.dryrun }}
        run: git push --atomic origin HEAD $TAG

      - name: Create GitHub Release
        if: ${{ !inputs.dryrun }}
        run: gh release create $TAG --notes-file CHANGELOG.md --latest
        env:
          GH_TOKEN: ${{ github.token }}
